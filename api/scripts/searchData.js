pages = [{"l":"index.html","n":"docs","t":"docs","d":"","k":"static"},
{"l":"org/nspl.html","n":"org.nspl","t":"package org.nspl","d":"org/nspl","k":"package"},
{"l":"org/nspl.html","n":"AxisElem","t":"type AxisElem = Elems3[ShapeElem, ElemList[Elems2[ShapeElem, TextBox]], ElemList[ShapeElem]]","d":"org/nspl","k":"type"},
{"l":"org/nspl.html","n":"Build","t":"type Build[A] = (Option[A], Event) => A","d":"org/nspl","k":"type"},
{"l":"org/nspl.html","n":"FC","t":"type FC[_] = FontConfiguration","d":"org/nspl","k":"type"},
{"l":"org/nspl.html","n":"defaultBuild","t":"def defaultBuild[T](b: () => T): defaultBuild[T]","d":"org/nspl","k":"def"},
{"l":"org/nspl.html","n":"fitToBounds","t":"def fitToBounds[T <: Renderable[LazyRef(...)]](member: T, bounds: Bounds): T","d":"org/nspl","k":"def"},
{"l":"org/nspl.html","n":"fitToHeight","t":"def fitToHeight[T <: Renderable[LazyRef(...)]](elem: T, height: Double): T","d":"org/nspl","k":"def"},
{"l":"org/nspl.html","n":"fitToWidth","t":"def fitToWidth[T <: Renderable[LazyRef(...)]](elem: T, width: Double): T","d":"org/nspl","k":"def"},
{"l":"org/nspl.html","n":"font","t":"def font(name: String)(implicit gm: GlyphMeasurer): FontConfiguration","d":"org/nspl","k":"def"},
{"l":"org/nspl.html","n":"ftsSyntaxDouble","t":"def ftsSyntaxDouble(v: Double): ftsSyntaxDouble","d":"org/nspl","k":"def"},
{"l":"org/nspl.html","n":"ftsSyntaxInt","t":"def ftsSyntaxInt(v: Int): ftsSyntaxInt","d":"org/nspl","k":"def"},
{"l":"org/nspl.html","n":"lineWidth","t":"val lineWidth: RelFontSize","d":"org/nspl","k":"val"},
{"l":"org/nspl.html","n":"renderable2build","t":"def renderable2build[T <: Renderable[LazyRef(...)]](elem: T): () => T","d":"org/nspl","k":"def"},
{"l":"org/nspl.html","n":"sequence","t":"def sequence[T <: Renderable[LazyRef(...)], F : FC](members: Seq[T], layout: Layout): ElemList[T]","d":"org/nspl","k":"def"},
{"l":"org/nspl.html","n":"sequence","t":"def sequence[T <: Renderable[LazyRef(...)], F : FC](members: Seq[T]): ElemList[T]","d":"org/nspl","k":"def"},
{"l":"org/nspl.html","n":"sequence","t":"def sequence[T <: Renderable[LazyRef(...)], F : FC](members: Seq[() => T], layout: Layout): () => ElemList[T]","d":"org/nspl","k":"def"},
{"l":"org/nspl.html","n":"sequence","t":"def sequence[T <: Renderable[LazyRef(...)], F : FC](members: Seq[() => T]): () => ElemList[T]","d":"org/nspl","k":"def"},
{"l":"org/nspl.html","n":"sequence2","t":"def sequence2[T1 <: Renderable[LazyRef(...)], T2 <: Renderable[LazyRef(...)], F : FC](members: Seq[Either[T1, T2]], layout: Layout): ElemList2[T1, T2]","d":"org/nspl","k":"def"},
{"l":"org/nspl.html","n":"sequence2","t":"def sequence2[T1 <: Renderable[LazyRef(...)], T2 <: Renderable[LazyRef(...)], F : FC](members1: Seq[Either[() => T1, () => T2]], layout: Layout): () => ElemList2[T1, T2]","d":"org/nspl","k":"def"},
{"l":"org/nspl/AffineTransform.html","n":"AffineTransform","t":"class AffineTransform(val m0: Double, val m1: Double, val m2: Double, val m3: Double, val m4: Double, val m5: Double)","d":"org/nspl/AffineTransform","k":"class"},
{"l":"org/nspl/AffineTransform.html","n":"andThen","t":"def andThen(tx: AffineTransform): AffineTransform","d":"org/nspl/AffineTransform","k":"def"},
{"l":"org/nspl/AffineTransform.html","n":"applyBefore","t":"def applyBefore(tx: AffineTransform): AffineTransform","d":"org/nspl/AffineTransform","k":"def"},
{"l":"org/nspl/AffineTransform.html","n":"inverse","t":"def inverse: AffineTransform","d":"org/nspl/AffineTransform","k":"def"},
{"l":"org/nspl/AffineTransform.html","n":"m0","t":"val m0: Double","d":"org/nspl/AffineTransform","k":"val"},
{"l":"org/nspl/AffineTransform.html","n":"m1","t":"val m1: Double","d":"org/nspl/AffineTransform","k":"val"},
{"l":"org/nspl/AffineTransform.html","n":"m2","t":"val m2: Double","d":"org/nspl/AffineTransform","k":"val"},
{"l":"org/nspl/AffineTransform.html","n":"m3","t":"val m3: Double","d":"org/nspl/AffineTransform","k":"val"},
{"l":"org/nspl/AffineTransform.html","n":"m4","t":"val m4: Double","d":"org/nspl/AffineTransform","k":"val"},
{"l":"org/nspl/AffineTransform.html","n":"m5","t":"val m5: Double","d":"org/nspl/AffineTransform","k":"val"},
{"l":"org/nspl/AffineTransform.html","n":"rotate","t":"def rotate(rad: Double, x: Double, y: Double): AffineTransform","d":"org/nspl/AffineTransform","k":"def"},
{"l":"org/nspl/AffineTransform.html","n":"rotate","t":"def rotate(rad: Double): AffineTransform","d":"org/nspl/AffineTransform","k":"def"},
{"l":"org/nspl/AffineTransform.html","n":"scale","t":"def scale(x: Double, y: Double): AffineTransform","d":"org/nspl/AffineTransform","k":"def"},
{"l":"org/nspl/AffineTransform.html","n":"scaleThenTranslate","t":"def scaleThenTranslate(tx: Double, ty: Double, sx: Double, sy: Double): AffineTransform","d":"org/nspl/AffineTransform","k":"def"},
{"l":"org/nspl/AffineTransform.html","n":"transform","t":"def transform(stroke: Stroke): Stroke","d":"org/nspl/AffineTransform","k":"def"},
{"l":"org/nspl/AffineTransform.html","n":"transform","t":"def transform(x: Double, y: Double): Point","d":"org/nspl/AffineTransform","k":"def"},
{"l":"org/nspl/AffineTransform.html","n":"transform","t":"def transform(p: Point): Point","d":"org/nspl/AffineTransform","k":"def"},
{"l":"org/nspl/AffineTransform.html","n":"transform","t":"def transform(b: Bounds): Bounds","d":"org/nspl/AffineTransform","k":"def"},
{"l":"org/nspl/AffineTransform.html","n":"transformBounds","t":"def transformBounds(x: Double, y: Double, w: Double, h: Double, anchor: Option[Point]): Bounds","d":"org/nspl/AffineTransform","k":"def"},
{"l":"org/nspl/AffineTransform.html","n":"translate","t":"def translate(x: Double, y: Double): AffineTransform","d":"org/nspl/AffineTransform","k":"def"},
{"l":"org/nspl/AffineTransform$.html","n":"AffineTransform","t":"object AffineTransform","d":"org/nspl/AffineTransform$","k":"object"},
{"l":"org/nspl/AffineTransform$.html","n":"apply","t":"def apply(m0: Double, m1: Double, m2: Double, m3: Double, m4: Double, m5: Double): AffineTransform","d":"org/nspl/AffineTransform$","k":"def"},
{"l":"org/nspl/AffineTransform$.html","n":"identity","t":"val identity: AffineTransform","d":"org/nspl/AffineTransform$","k":"val"},
{"l":"org/nspl/AffineTransform$.html","n":"reflectOrigin","t":"val reflectOrigin: AffineTransform","d":"org/nspl/AffineTransform$","k":"val"},
{"l":"org/nspl/AffineTransform$.html","n":"reflectX","t":"val reflectX: AffineTransform","d":"org/nspl/AffineTransform$","k":"val"},
{"l":"org/nspl/AffineTransform$.html","n":"reflectY","t":"val reflectY: AffineTransform","d":"org/nspl/AffineTransform$","k":"val"},
{"l":"org/nspl/AffineTransform$.html","n":"rotate","t":"def rotate(rad: Double): AffineTransform","d":"org/nspl/AffineTransform$","k":"def"},
{"l":"org/nspl/AffineTransform$.html","n":"rotate","t":"def rotate(rad: Double, x: Double, y: Double): AffineTransform","d":"org/nspl/AffineTransform$","k":"def"},
{"l":"org/nspl/AffineTransform$.html","n":"rotateCenter","t":"def rotateCenter(rad: Double): Bounds => AffineTransform","d":"org/nspl/AffineTransform$","k":"def"},
{"l":"org/nspl/AffineTransform$.html","n":"scale","t":"def scale(x: Double, y: Double): AffineTransform","d":"org/nspl/AffineTransform$","k":"def"},
{"l":"org/nspl/AffineTransform$.html","n":"scaleThenTranslate","t":"def scaleThenTranslate(tx: Double, ty: Double, sx: Double, sy: Double): AffineTransform","d":"org/nspl/AffineTransform$","k":"def"},
{"l":"org/nspl/AffineTransform$.html","n":"translate","t":"def translate(x: Double, y: Double): AffineTransform","d":"org/nspl/AffineTransform$","k":"def"},
{"l":"org/nspl/AffineTransform$.html","n":"translateThenScale","t":"def translateThenScale(tx: Double, ty: Double, sx: Double, sy: Double): AffineTransform","d":"org/nspl/AffineTransform$","k":"def"},
{"l":"org/nspl/Align$.html","n":"Align","t":"object Align","d":"org/nspl/Align$","k":"object"},
{"l":"org/nspl/Align$.html","n":"bottomCenter","t":"def bottomCenter[T <: Renderable[LazyRef(...)]](move: T, reference: Bounds): T","d":"org/nspl/Align$","k":"def"},
{"l":"org/nspl/Align$.html","n":"bottomLeftCorner","t":"def bottomLeftCorner[T <: Renderable[LazyRef(...)]](move: T, reference: Bounds): T","d":"org/nspl/Align$","k":"def"},
{"l":"org/nspl/Align$.html","n":"bottomRightCorner","t":"def bottomRightCorner[T <: Renderable[LazyRef(...)]](move: T, reference: Bounds): T","d":"org/nspl/Align$","k":"def"},
{"l":"org/nspl/Align$.html","n":"center","t":"def center[T <: Renderable[LazyRef(...)]](move: T, reference: Bounds): T","d":"org/nspl/Align$","k":"def"},
{"l":"org/nspl/Align$.html","n":"centerLeft","t":"def centerLeft[T <: Renderable[LazyRef(...)]](move: T, reference: Bounds): T","d":"org/nspl/Align$","k":"def"},
{"l":"org/nspl/Align$.html","n":"centerRight","t":"def centerRight[T <: Renderable[LazyRef(...)]](move: T, reference: Bounds): T","d":"org/nspl/Align$","k":"def"},
{"l":"org/nspl/Align$.html","n":"horizontal","t":"def horizontal[T <: Renderable[LazyRef(...)]](move: T, reference: Bounds, alignment: Alignment): T","d":"org/nspl/Align$","k":"def"},
{"l":"org/nspl/Align$.html","n":"horizontalAnchor","t":"def horizontalAnchor[T <: Renderable[LazyRef(...)]](move: T, reference: Bounds): T","d":"org/nspl/Align$","k":"def"},
{"l":"org/nspl/Align$.html","n":"horizontalCenter","t":"def horizontalCenter[T <: Renderable[LazyRef(...)]](move: T, reference: Bounds): T","d":"org/nspl/Align$","k":"def"},
{"l":"org/nspl/Align$.html","n":"horizontalGapAfterReference","t":"def horizontalGapAfterReference[T <: Renderable[LazyRef(...)]](move: T, reference: Bounds, gap: Double): T","d":"org/nspl/Align$","k":"def"},
{"l":"org/nspl/Align$.html","n":"horizontalGapBeforeReference","t":"def horizontalGapBeforeReference[T <: Renderable[LazyRef(...)]](move: T, reference: Bounds, gap: Double): T","d":"org/nspl/Align$","k":"def"},
{"l":"org/nspl/Align$.html","n":"horizontalLeft","t":"def horizontalLeft[T <: Renderable[LazyRef(...)]](move: T, reference: Bounds): T","d":"org/nspl/Align$","k":"def"},
{"l":"org/nspl/Align$.html","n":"horizontalRight","t":"def horizontalRight[T <: Renderable[LazyRef(...)]](move: T, reference: Bounds): T","d":"org/nspl/Align$","k":"def"},
{"l":"org/nspl/Align$.html","n":"topCenter","t":"def topCenter[T <: Renderable[LazyRef(...)]](move: T, reference: Bounds): T","d":"org/nspl/Align$","k":"def"},
{"l":"org/nspl/Align$.html","n":"topLeftCorner","t":"def topLeftCorner[T <: Renderable[LazyRef(...)]](move: T, reference: Bounds): T","d":"org/nspl/Align$","k":"def"},
{"l":"org/nspl/Align$.html","n":"topRightCorner","t":"def topRightCorner[T <: Renderable[LazyRef(...)]](move: T, reference: Bounds): T","d":"org/nspl/Align$","k":"def"},
{"l":"org/nspl/Align$.html","n":"vertical","t":"def vertical[T <: Renderable[LazyRef(...)]](move: T, reference: Bounds, alignment: Alignment): T","d":"org/nspl/Align$","k":"def"},
{"l":"org/nspl/Align$.html","n":"verticalAnchor","t":"def verticalAnchor[T <: Renderable[LazyRef(...)]](move: T, reference: Bounds): T","d":"org/nspl/Align$","k":"def"},
{"l":"org/nspl/Align$.html","n":"verticalCenter","t":"def verticalCenter[T <: Renderable[LazyRef(...)]](move: T, reference: Bounds): T","d":"org/nspl/Align$","k":"def"},
{"l":"org/nspl/Align$.html","n":"verticalGapAfterReference","t":"def verticalGapAfterReference[T <: Renderable[LazyRef(...)]](move: T, reference: Bounds, gap: Double): T","d":"org/nspl/Align$","k":"def"},
{"l":"org/nspl/Align$.html","n":"verticalGapBeforeReference","t":"def verticalGapBeforeReference[T <: Renderable[LazyRef(...)]](move: T, reference: Bounds, gap: Double): T","d":"org/nspl/Align$","k":"def"},
{"l":"org/nspl/Align$.html","n":"verticalLeft","t":"def verticalLeft[T <: Renderable[LazyRef(...)]](move: T, reference: Bounds): T","d":"org/nspl/Align$","k":"def"},
{"l":"org/nspl/Align$.html","n":"verticalRight","t":"def verticalRight[T <: Renderable[LazyRef(...)]](move: T, reference: Bounds): T","d":"org/nspl/Align$","k":"def"},
{"l":"org/nspl/Align$$Anchor$.html","n":"Anchor","t":"object Anchor extends Alignment","d":"org/nspl/Align$$Anchor$","k":"object"},
{"l":"org/nspl/Align$$Center$.html","n":"Center","t":"object Center extends Alignment","d":"org/nspl/Align$$Center$","k":"object"},
{"l":"org/nspl/Align$$Left$.html","n":"Left","t":"object Left extends Alignment","d":"org/nspl/Align$$Left$","k":"object"},
{"l":"org/nspl/Align$$NoAlignment$.html","n":"NoAlignment","t":"object NoAlignment extends Alignment","d":"org/nspl/Align$$NoAlignment$","k":"object"},
{"l":"org/nspl/Align$$Right$.html","n":"Right","t":"object Right extends Alignment","d":"org/nspl/Align$$Right$","k":"object"},
{"l":"org/nspl/Alignment.html","n":"Alignment","t":"trait Alignment","d":"org/nspl/Alignment","k":"trait"},
{"l":"org/nspl/Axis.html","n":"Axis","t":"trait Axis","d":"org/nspl/Axis","k":"trait"},
{"l":"org/nspl/Axis.html","n":"horizontal","t":"def horizontal: Boolean","d":"org/nspl/Axis","k":"def"},
{"l":"org/nspl/Axis.html","n":"log","t":"def log: Boolean","d":"org/nspl/Axis","k":"def"},
{"l":"org/nspl/Axis.html","n":"max","t":"def max: Double","d":"org/nspl/Axis","k":"def"},
{"l":"org/nspl/Axis.html","n":"min","t":"def min: Double","d":"org/nspl/Axis","k":"def"},
{"l":"org/nspl/Axis.html","n":"width","t":"def width: Double","d":"org/nspl/Axis","k":"def"},
{"l":"org/nspl/Axis.html","n":"worldToView","t":"def worldToView(v: Double): Double","d":"org/nspl/Axis","k":"def"},
{"l":"org/nspl/AxisFactory.html","n":"AxisFactory","t":"trait AxisFactory","d":"org/nspl/AxisFactory","k":"trait"},
{"l":"org/nspl/AxisFactory.html","n":"make","t":"def make(min: Double, max: Double, width: Double, horizontal: Boolean): Axis","d":"org/nspl/AxisFactory","k":"def"},
{"l":"org/nspl/AxisSettings$.html","n":"AxisSettings","t":"object AxisSettings","d":"org/nspl/AxisSettings$","k":"object"},
{"l":"org/nspl/AxisSettings$.html","n":"simple","t":"def simple(axisFactory: AxisFactory)(implicit fc: FontConfiguration): AxisSettings","d":"org/nspl/AxisSettings$","k":"def"},
{"l":"org/nspl/AxisSettings.html","n":"AxisSettings","t":"class AxisSettings(val axisFactory: AxisFactory, numTicks: Int, tickSpace: Option[Double], numMinorTicksFactor: Int, tickLength: RelFontSize, tickLabelDistance: RelFontSize, customTicks: Seq[(Double, String)], labelRotation: Double, val width: RelFontSize, fontSize: RelFontSize, tickAlignment: Double, lineWidth: RelFontSize, val lineLengthFraction: Double, val lineStartFraction: Double, tickFormatter: Seq[Double] => Seq[String], forceMajorTickOnMin: Boolean, forceMajorTickOnMax: Boolean)(implicit fc: FontConfiguration)","d":"org/nspl/AxisSettings","k":"class"},
{"l":"org/nspl/AxisSettings.html","n":"axisFactory","t":"val axisFactory: AxisFactory","d":"org/nspl/AxisSettings","k":"val"},
{"l":"org/nspl/AxisSettings.html","n":"lineLengthFraction","t":"val lineLengthFraction: Double","d":"org/nspl/AxisSettings","k":"val"},
{"l":"org/nspl/AxisSettings.html","n":"lineStartFraction","t":"val lineStartFraction: Double","d":"org/nspl/AxisSettings","k":"val"},
{"l":"org/nspl/AxisSettings.html","n":"renderable","t":"def renderable(axis: Axis, noTickLabel: Boolean, disableTicksAt: List[Double]): (List[Double], List[Double], AxisElem)","d":"org/nspl/AxisSettings","k":"def"},
{"l":"org/nspl/AxisSettings.html","n":"width","t":"val width: RelFontSize","d":"org/nspl/AxisSettings","k":"val"},
{"l":"org/nspl/Bounds.html","n":"Bounds","t":"class Bounds(x: Double, y: Double, w: Double, h: Double, anchor: Option[Point])","d":"org/nspl/Bounds","k":"class"},
{"l":"org/nspl/Bounds.html","n":"centerX","t":"def centerX: Double","d":"org/nspl/Bounds","k":"def"},
{"l":"org/nspl/Bounds.html","n":"centerY","t":"def centerY: Double","d":"org/nspl/Bounds","k":"def"},
{"l":"org/nspl/Bounds.html","n":"contains","t":"def contains(p: Point): Boolean","d":"org/nspl/Bounds","k":"def"},
{"l":"org/nspl/Bounds.html","n":"maxX","t":"def maxX: Double","d":"org/nspl/Bounds","k":"def"},
{"l":"org/nspl/Bounds.html","n":"maxY","t":"def maxY: Double","d":"org/nspl/Bounds","k":"def"},
{"l":"org/nspl/Build$.html","n":"Build","t":"object Build","d":"org/nspl/Build$","k":"object"},
{"l":"org/nspl/Build$.html","n":"apply","t":"def apply[A](f: A)(pf: PartialFunction[(Option[A], Event), A]): () => A","d":"org/nspl/Build$","k":"def"},
{"l":"org/nspl/Build$.html","n":"const","t":"def const[A](f: => A): () => A","d":"org/nspl/Build$","k":"def"},
{"l":"org/nspl/Build$.html","n":"withoutState","t":"def withoutState[A](pf: PartialFunction[Event, A]): () => A","d":"org/nspl/Build$","k":"def"},
{"l":"org/nspl/CanvasRC.html","n":"CanvasRC","t":"class CanvasRC extends RenderingContext[CanvasRC]","d":"org/nspl/CanvasRC","k":"class"},
{"l":"org/nspl/CanvasRC.html","n":"LocalTx","t":"type LocalTx = AffineTransform","d":"org/nspl/CanvasRC","k":"type"},
{"l":"org/nspl/CanvasRC.html","n":"clear","t":"def clear(): Unit","d":"org/nspl/CanvasRC","k":"def"},
{"l":"org/nspl/CanvasRC.html","n":"concatTransform","t":"def concatTransform(tx: AffineTransform): Unit","d":"org/nspl/CanvasRC","k":"def"},
{"l":"org/nspl/CanvasRC.html","n":"getTransform","t":"def getTransform: LocalTx","d":"org/nspl/CanvasRC","k":"def"},
{"l":"org/nspl/CanvasRC.html","n":"localToScala","t":"def localToScala(tx: AffineTransform): AffineTransform","d":"org/nspl/CanvasRC","k":"def"},
{"l":"org/nspl/CanvasRC.html","n":"setTransform","t":"def setTransform(tx: LocalTx): Unit","d":"org/nspl/CanvasRC","k":"def"},
{"l":"org/nspl/CanvasRC.html","n":"setTransformInGraphics","t":"def setTransformInGraphics(): Unit","d":"org/nspl/CanvasRC","k":"def"},
{"l":"org/nspl/Cap.html","n":"Cap","t":"trait Cap","d":"org/nspl/Cap","k":"trait"},
{"l":"org/nspl/Cap$.html","n":"Cap","t":"object Cap","d":"org/nspl/Cap$","k":"object"},
{"l":"org/nspl/Cap$$Butt$.html","n":"Butt","t":"object Butt extends Cap","d":"org/nspl/Cap$$Butt$","k":"object"},
{"l":"org/nspl/Cap$$Round$.html","n":"Round","t":"object Round extends Cap","d":"org/nspl/Cap$$Round$","k":"object"},
{"l":"org/nspl/Cap$$Square$.html","n":"Square","t":"object Square extends Cap","d":"org/nspl/Cap$$Square$","k":"object"},
{"l":"org/nspl/Color.html","n":"Color","t":"class Color(r: Int, g: Int, b: Int, a: Int) extends Colormap","d":"org/nspl/Color","k":"class"},
{"l":"org/nspl/Color.html","n":"apply","t":"def apply(v: Double): Color","d":"org/nspl/Color","k":"def"},
{"l":"org/nspl/Color.html","n":"withRange","t":"def withRange(min: Double, max: Double): Colormap","d":"org/nspl/Color","k":"def"},
{"l":"org/nspl/Color$.html","n":"Color","t":"object Color","d":"org/nspl/Color$","k":"object"},
{"l":"org/nspl/Color$.html","n":"BLACK","t":"val BLACK: Color","d":"org/nspl/Color$","k":"val"},
{"l":"org/nspl/Color$.html","n":"BLUE","t":"val BLUE: Color","d":"org/nspl/Color$","k":"val"},
{"l":"org/nspl/Color$.html","n":"GREEN","t":"val GREEN: Color","d":"org/nspl/Color$","k":"val"},
{"l":"org/nspl/Color$.html","n":"RED","t":"val RED: Color","d":"org/nspl/Color$","k":"val"},
{"l":"org/nspl/Color$.html","n":"WHITE","t":"val WHITE: Color","d":"org/nspl/Color$","k":"val"},
{"l":"org/nspl/Color$.html","n":"apply","t":"def apply(r: Int, g: Int, b: Int): Color","d":"org/nspl/Color$","k":"def"},
{"l":"org/nspl/Color$.html","n":"black","t":"val black: Color","d":"org/nspl/Color$","k":"val"},
{"l":"org/nspl/Color$.html","n":"blue","t":"val blue: Color","d":"org/nspl/Color$","k":"val"},
{"l":"org/nspl/Color$.html","n":"gray1","t":"val gray1: Color","d":"org/nspl/Color$","k":"val"},
{"l":"org/nspl/Color$.html","n":"gray2","t":"val gray2: Color","d":"org/nspl/Color$","k":"val"},
{"l":"org/nspl/Color$.html","n":"gray3","t":"val gray3: Color","d":"org/nspl/Color$","k":"val"},
{"l":"org/nspl/Color$.html","n":"gray4","t":"val gray4: Color","d":"org/nspl/Color$","k":"val"},
{"l":"org/nspl/Color$.html","n":"gray5","t":"val gray5: Color","d":"org/nspl/Color$","k":"val"},
{"l":"org/nspl/Color$.html","n":"gray6","t":"val gray6: Color","d":"org/nspl/Color$","k":"val"},
{"l":"org/nspl/Color$.html","n":"green","t":"val green: Color","d":"org/nspl/Color$","k":"val"},
{"l":"org/nspl/Color$.html","n":"grey1","t":"val grey1: Color","d":"org/nspl/Color$","k":"val"},
{"l":"org/nspl/Color$.html","n":"grey2","t":"val grey2: Color","d":"org/nspl/Color$","k":"val"},
{"l":"org/nspl/Color$.html","n":"grey3","t":"val grey3: Color","d":"org/nspl/Color$","k":"val"},
{"l":"org/nspl/Color$.html","n":"grey4","t":"val grey4: Color","d":"org/nspl/Color$","k":"val"},
{"l":"org/nspl/Color$.html","n":"grey5","t":"val grey5: Color","d":"org/nspl/Color$","k":"val"},
{"l":"org/nspl/Color$.html","n":"grey6","t":"val grey6: Color","d":"org/nspl/Color$","k":"val"},
{"l":"org/nspl/Color$.html","n":"red","t":"val red: Color","d":"org/nspl/Color$","k":"val"},
{"l":"org/nspl/Color$.html","n":"rgbInterpolate","t":"def rgbInterpolate(x0: Color, x1: Color, a: Double): Color","d":"org/nspl/Color$","k":"def"},
{"l":"org/nspl/Color$.html","n":"transparent","t":"val transparent: Color","d":"org/nspl/Color$","k":"val"},
{"l":"org/nspl/Color$.html","n":"white","t":"val white: Color","d":"org/nspl/Color$","k":"val"},
{"l":"org/nspl/Colormap.html","n":"Colormap","t":"trait Colormap","d":"org/nspl/Colormap","k":"trait"},
{"l":"org/nspl/Colormap.html","n":"apply","t":"def apply(v: Double): Color","d":"org/nspl/Colormap","k":"def"},
{"l":"org/nspl/Colormap.html","n":"withRange","t":"def withRange(min: Double, max: Double): Colormap","d":"org/nspl/Colormap","k":"def"},
{"l":"org/nspl/Colormap$.html","n":"Colormap","t":"object Colormap","d":"org/nspl/Colormap$","k":"object"},
{"l":"org/nspl/Colormap$.html","n":"map","t":"def map(cm: Colormap)(f: Color => Color): Colormap","d":"org/nspl/Colormap$","k":"def"},
{"l":"org/nspl/ColumnLayout.html","n":"ColumnLayout","t":"class ColumnLayout(numRows: Int, horizontalGap: RelFontSize, verticalGap: RelFontSize) extends Layout","d":"org/nspl/ColumnLayout","k":"class"},
{"l":"org/nspl/ColumnLayout.html","n":"apply","t":"def apply[F : FC](s: Seq[Bounds]): Seq[Bounds]","d":"org/nspl/ColumnLayout","k":"def"},
{"l":"org/nspl/DataElem.html","n":"DataElem","t":"class DataElem(data: DataSource, xAxis: Axis, yAxis: Axis, renderers: Seq[DataRenderer], originalBounds: Bounds, tx: AffineTransform) extends Renderable[DataElem]","d":"org/nspl/DataElem","k":"class"},
{"l":"org/nspl/DataElem.html","n":"bounds","t":"def bounds: Bounds","d":"org/nspl/DataElem","k":"def"},
{"l":"org/nspl/DataElem.html","n":"transform","t":"def transform(tx: AffineTransform): DataElem","d":"org/nspl/DataElem","k":"def"},
{"l":"org/nspl/DataElem.html","n":"transform","t":"def transform(tx: (Bounds, AffineTransform) => AffineTransform): DataElem","d":"org/nspl/DataElem","k":"def"},
{"l":"org/nspl/DataElem$.html","n":"DataElem","t":"object DataElem","d":"org/nspl/DataElem$","k":"object"},
{"l":"org/nspl/DataElem$.html","n":"dataElemRenderer","t":"def dataElemRenderer[RC <: RenderingContext[LazyRef(...)]](implicit re: Renderer[ShapeElem, RC], rt: Renderer[TextBox, RC]): Renderer[DataElem, RC]","d":"org/nspl/DataElem$","k":"def"},
{"l":"org/nspl/DataElem3D.html","n":"DataElem3D","t":"class DataElem3D(data: DataSource, renderers: Seq[DataRenderer3D], matrix: Mat4, originalBounds: Bounds, tx: AffineTransform) extends Renderable[DataElem3D]","d":"org/nspl/DataElem3D","k":"class"},
{"l":"org/nspl/DataElem3D.html","n":"bounds","t":"def bounds: Bounds","d":"org/nspl/DataElem3D","k":"def"},
{"l":"org/nspl/DataElem3D.html","n":"transform","t":"def transform(tx: AffineTransform): DataElem3D","d":"org/nspl/DataElem3D","k":"def"},
{"l":"org/nspl/DataElem3D.html","n":"transform","t":"def transform(tx: (Bounds, AffineTransform) => AffineTransform): DataElem3D","d":"org/nspl/DataElem3D","k":"def"},
{"l":"org/nspl/DataElem3D$.html","n":"DataElem3D","t":"object DataElem3D","d":"org/nspl/DataElem3D$","k":"object"},
{"l":"org/nspl/DataElem3D$.html","n":"dataElemRenderer","t":"def dataElemRenderer[RC <: RenderingContext[LazyRef(...)]](implicit re: Renderer[ShapeElem, RC], rt: Renderer[TextBox, RC]): Renderer[DataElem3D, RC]","d":"org/nspl/DataElem3D$","k":"def"},
{"l":"org/nspl/DataRenderer.html","n":"DataRenderer","t":"trait DataRenderer","d":"org/nspl/DataRenderer","k":"trait"},
{"l":"org/nspl/DataRenderer.html","n":"asLegend","t":"def asLegend: Option[LegendElem]","d":"org/nspl/DataRenderer","k":"def"},
{"l":"org/nspl/DataRenderer.html","n":"clear","t":"def clear[R <: RenderingContext[LazyRef(...)]](ctx: R)(implicit re: Renderer[ShapeElem, R], rt: Renderer[TextBox, R]): Unit","d":"org/nspl/DataRenderer","k":"def"},
{"l":"org/nspl/DataRenderer.html","n":"render","t":"def render[R <: RenderingContext[LazyRef(...)]](data: Row, xAxis: Axis, yAxis: Axis, ctx: R, tx: AffineTransform)(implicit re: Renderer[ShapeElem, R], rt: Renderer[TextBox, R]): Unit","d":"org/nspl/DataRenderer","k":"def"},
{"l":"org/nspl/DataRenderer.html","n":"xMinMax","t":"def xMinMax(ds: DataSource): Option[MinMax]","d":"org/nspl/DataRenderer","k":"def"},
{"l":"org/nspl/DataRenderer.html","n":"yMinMax","t":"def yMinMax(ds: DataSource): Option[MinMax]","d":"org/nspl/DataRenderer","k":"def"},
{"l":"org/nspl/DataRenderer3D.html","n":"DataRenderer3D","t":"trait DataRenderer3D","d":"org/nspl/DataRenderer3D","k":"trait"},
{"l":"org/nspl/DataRenderer3D.html","n":"asLegend","t":"def asLegend: Option[LegendElem]","d":"org/nspl/DataRenderer3D","k":"def"},
{"l":"org/nspl/DataRenderer3D.html","n":"clear","t":"def clear[R <: RenderingContext[LazyRef(...)]](ctx: R)(implicit re: Renderer[ShapeElem, R], rt: Renderer[TextBox, R]): Unit","d":"org/nspl/DataRenderer3D","k":"def"},
{"l":"org/nspl/DataRenderer3D.html","n":"render","t":"def render[R <: RenderingContext[LazyRef(...)]](data: Row, ctx: R, viewProjectionMatrix: Mat4, tx: AffineTransform)(implicit re: Renderer[ShapeElem, R], rt: Renderer[TextBox, R]): Unit","d":"org/nspl/DataRenderer3D","k":"def"},
{"l":"org/nspl/DiscreteColors.html","n":"DiscreteColors","t":"class DiscreteColors(numColors: Int, saturation: Double, lighting: Double) extends Colormap","d":"org/nspl/DiscreteColors","k":"class"},
{"l":"org/nspl/DiscreteColors.html","n":"apply","t":"def apply(value: Double): Color","d":"org/nspl/DiscreteColors","k":"def"},
{"l":"org/nspl/DiscreteColors.html","n":"withRange","t":"def withRange(min: Double, max: Double): Colormap","d":"org/nspl/DiscreteColors","k":"def"},
{"l":"org/nspl/ElemEither.html","n":"ElemEither","t":"class ElemEither[A <: Renderable[A], B <: Renderable[B]](either: Either[A, B], tx: AffineTransform) extends Renderable[ElemEither[A, B]]","d":"org/nspl/ElemEither","k":"class"},
{"l":"org/nspl/ElemEither.html","n":"bounds","t":"def bounds: Bounds","d":"org/nspl/ElemEither","k":"def"},
{"l":"org/nspl/ElemEither.html","n":"transform","t":"def transform(tx: (Bounds, AffineTransform) => AffineTransform): ElemEither[A, B]","d":"org/nspl/ElemEither","k":"def"},
{"l":"org/nspl/ElemEither.html","n":"transform","t":"def transform(tx: AffineTransform): ElemEither[A, B]","d":"org/nspl/ElemEither","k":"def"},
{"l":"org/nspl/ElemEither$.html","n":"ElemEither","t":"object ElemEither","d":"org/nspl/ElemEither$","k":"object"},
{"l":"org/nspl/ElemEither$.html","n":"renderer","t":"def renderer[T1 <: Renderable[LazyRef(...)], T2 <: Renderable[LazyRef(...)], R <: RenderingContext[LazyRef(...)]](implicit r1: Renderer[T1, R], r2: Renderer[T2, R]): Renderer[ElemEither[T1, T2], R]","d":"org/nspl/ElemEither$","k":"def"},
{"l":"org/nspl/ElemList.html","n":"ElemList","t":"class ElemList[T <: Renderable[T]](members: Seq[T], tx: AffineTransform) extends Renderable[ElemList[T]]","d":"org/nspl/ElemList","k":"class"},
{"l":"org/nspl/ElemList.html","n":"bounds","t":"val bounds: Bounds","d":"org/nspl/ElemList","k":"val"},
{"l":"org/nspl/ElemList.html","n":"transform","t":"def transform(tx: (Bounds, AffineTransform) => AffineTransform): ElemList[T]","d":"org/nspl/ElemList","k":"def"},
{"l":"org/nspl/ElemList.html","n":"transform","t":"def transform(tx: AffineTransform): ElemList[T]","d":"org/nspl/ElemList","k":"def"},
{"l":"org/nspl/ElemList$.html","n":"ElemList","t":"object ElemList","d":"org/nspl/ElemList$","k":"object"},
{"l":"org/nspl/ElemList$.html","n":"compositeListRenderer","t":"def compositeListRenderer[T <: Renderable[LazyRef(...)], R <: RenderingContext[LazyRef(...)]](implicit r: Renderer[T, R]): Renderer[ElemList[T], R]","d":"org/nspl/ElemList$","k":"def"},
{"l":"org/nspl/ElemList2.html","n":"ElemList2","t":"class ElemList2[T1 <: Renderable[T1], T2 <: Renderable[T2]](members: Seq[Either[T1, T2]], tx: AffineTransform) extends Renderable[ElemList2[T1, T2]]","d":"org/nspl/ElemList2","k":"class"},
{"l":"org/nspl/ElemList2.html","n":"bounds","t":"val bounds: Bounds","d":"org/nspl/ElemList2","k":"val"},
{"l":"org/nspl/ElemList2.html","n":"transform","t":"def transform(tx: (Bounds, AffineTransform) => AffineTransform): ElemList2[T1, T2]","d":"org/nspl/ElemList2","k":"def"},
{"l":"org/nspl/ElemList2.html","n":"transform","t":"def transform(tx: AffineTransform): ElemList2[T1, T2]","d":"org/nspl/ElemList2","k":"def"},
{"l":"org/nspl/ElemList2$.html","n":"ElemList2","t":"object ElemList2","d":"org/nspl/ElemList2$","k":"object"},
{"l":"org/nspl/ElemList2$.html","n":"compositeListRenderer2","t":"def compositeListRenderer2[T <: Renderable[LazyRef(...)], T2 <: Renderable[LazyRef(...)], R <: RenderingContext[LazyRef(...)]](implicit r1: Renderer[T, R], r2: Renderer[T2, R]): Renderer[ElemList2[T, T2], R]","d":"org/nspl/ElemList2$","k":"def"},
{"l":"org/nspl/ElemOption.html","n":"ElemOption","t":"class ElemOption[A <: Renderable[A]](option: Option[A]) extends Renderable[ElemOption[A]]","d":"org/nspl/ElemOption","k":"class"},
{"l":"org/nspl/ElemOption.html","n":"bounds","t":"def bounds: Bounds","d":"org/nspl/ElemOption","k":"def"},
{"l":"org/nspl/ElemOption.html","n":"map","t":"def map[K <: Renderable[LazyRef(...)]](f: A => K): ElemOption[K]","d":"org/nspl/ElemOption","k":"def"},
{"l":"org/nspl/ElemOption.html","n":"transform","t":"def transform(tx: (Bounds, AffineTransform) => AffineTransform): ElemOption[A]","d":"org/nspl/ElemOption","k":"def"},
{"l":"org/nspl/ElemOption.html","n":"transform","t":"def transform(tx: AffineTransform): ElemOption[A]","d":"org/nspl/ElemOption","k":"def"},
{"l":"org/nspl/ElemOption$.html","n":"ElemOption","t":"object ElemOption","d":"org/nspl/ElemOption$","k":"object"},
{"l":"org/nspl/ElemOption$.html","n":"renderer","t":"def renderer[T1 <: Renderable[LazyRef(...)], R <: RenderingContext[LazyRef(...)]](implicit r1: Renderer[T1, R]): Renderer[ElemOption[T1], R]","d":"org/nspl/ElemOption$","k":"def"},
{"l":"org/nspl/Ellipse.html","n":"Ellipse","t":"class Ellipse(x: Double, y: Double, w: Double, h: Double, tx: AffineTransform) extends Shape","d":"org/nspl/Ellipse","k":"class"},
{"l":"org/nspl/Ellipse.html","n":"bounds","t":"def bounds: Bounds","d":"org/nspl/Ellipse","k":"def"},
{"l":"org/nspl/Ellipse.html","n":"currentTransform","t":"def currentTransform: AffineTransform","d":"org/nspl/Ellipse","k":"def"},
{"l":"org/nspl/Ellipse.html","n":"transform","t":"def transform(tx: (Bounds, AffineTransform) => AffineTransform): Shape","d":"org/nspl/Ellipse","k":"def"},
{"l":"org/nspl/EmptyIdentifier$.html","n":"EmptyIdentifier","t":"object EmptyIdentifier extends Identifier","d":"org/nspl/EmptyIdentifier$","k":"object"},
{"l":"org/nspl/Font.html","n":"Font","t":"class Font(val name: String, val size: Int)","d":"org/nspl/Font","k":"class"},
{"l":"org/nspl/Font.html","n":"name","t":"val name: String","d":"org/nspl/Font","k":"val"},
{"l":"org/nspl/Font.html","n":"size","t":"val size: Int","d":"org/nspl/Font","k":"val"},
{"l":"org/nspl/Font$.html","n":"Font","t":"object Font","d":"org/nspl/Font$","k":"object"},
{"l":"org/nspl/Font$$GlyphMeasurer.html","n":"GlyphMeasurer","t":"trait GlyphMeasurer","d":"org/nspl/Font$$GlyphMeasurer","k":"trait"},
{"l":"org/nspl/Font$$GlyphMeasurer.html","n":"advance","t":"def advance(s: Char, f: Font): Double","d":"org/nspl/Font$$GlyphMeasurer","k":"def"},
{"l":"org/nspl/Font$$GlyphMeasurer.html","n":"lineMetrics","t":"def lineMetrics(f: Font): LineMetrics","d":"org/nspl/Font$$GlyphMeasurer","k":"def"},
{"l":"org/nspl/Font$$LineMetrics.html","n":"LineMetrics","t":"class LineMetrics(ascent: Double, descent: Double, leading: Double)","d":"org/nspl/Font$$LineMetrics","k":"class"},
{"l":"org/nspl/FontConfiguration.html","n":"FontConfiguration","t":"class FontConfiguration(val font: Font, measure: GlyphMeasurer)","d":"org/nspl/FontConfiguration","k":"class"},
{"l":"org/nspl/FontConfiguration.html","n":"advance","t":"def advance(c: Char): Double","d":"org/nspl/FontConfiguration","k":"def"},
{"l":"org/nspl/FontConfiguration.html","n":"font","t":"val font: Font","d":"org/nspl/FontConfiguration","k":"val"},
{"l":"org/nspl/FontConfiguration.html","n":"lineMetrics","t":"val lineMetrics: LineMetrics","d":"org/nspl/FontConfiguration","k":"val"},
{"l":"org/nspl/FreeLayout$.html","n":"FreeLayout","t":"object FreeLayout extends Layout","d":"org/nspl/FreeLayout$","k":"object"},
{"l":"org/nspl/FreeLayout$.html","n":"apply","t":"def apply[F : FC](s: Seq[Bounds]): Seq[Bounds]","d":"org/nspl/FreeLayout$","k":"def"},
{"l":"org/nspl/GrayScale.html","n":"GrayScale","t":"class GrayScale(min: Double, max: Double, white: Int, transparentBelowBounds: Boolean) extends Colormap","d":"org/nspl/GrayScale","k":"class"},
{"l":"org/nspl/GrayScale.html","n":"apply","t":"def apply(value: Double): Color","d":"org/nspl/GrayScale","k":"def"},
{"l":"org/nspl/GrayScale.html","n":"withRange","t":"def withRange(min: Double, max: Double): Colormap","d":"org/nspl/GrayScale","k":"def"},
{"l":"org/nspl/HeatMapColors.html","n":"HeatMapColors","t":"class HeatMapColors(min: Double, max: Double, center: Option[Double]) extends Colormap","d":"org/nspl/HeatMapColors","k":"class"},
{"l":"org/nspl/HeatMapColors.html","n":"apply","t":"def apply(value: Double): Color","d":"org/nspl/HeatMapColors","k":"def"},
{"l":"org/nspl/HeatMapColors.html","n":"withRange","t":"def withRange(min: Double, max: Double): Colormap","d":"org/nspl/HeatMapColors","k":"def"},
{"l":"org/nspl/HorizontalStack.html","n":"HorizontalStack","t":"class HorizontalStack(alignment: Alignment, gap: RelFontSize) extends Layout","d":"org/nspl/HorizontalStack","k":"class"},
{"l":"org/nspl/HorizontalStack.html","n":"apply","t":"def apply[F : FC](s: Seq[Bounds]): Seq[Bounds]","d":"org/nspl/HorizontalStack","k":"def"},
{"l":"org/nspl/Identifier.html","n":"Identifier","t":"trait Identifier","d":"org/nspl/Identifier","k":"trait"},
{"l":"org/nspl/InLegend.html","n":"InLegend","t":"class InLegend(text: String) extends LegendConfig","d":"org/nspl/InLegend","k":"class"},
{"l":"org/nspl/JavaAWTUtil.html","n":"JavaAWTUtil","t":"trait JavaAWTUtil","d":"org/nspl/JavaAWTUtil","k":"trait"},
{"l":"org/nspl/JavaAWTUtil.html","n":"pdfToByteArray","t":"def pdfToByteArray[K <: Renderable[LazyRef(...)]](elem: () => K, width: Int)(implicit er: Renderer[K, JavaRC]): Array[Byte]","d":"org/nspl/JavaAWTUtil","k":"def"},
{"l":"org/nspl/JavaAWTUtil.html","n":"pdfToFile","t":"def pdfToFile[K <: Renderable[LazyRef(...)]](f: File, elem: () => K, width: Int)(implicit er: Renderer[K, JavaRC]): File","d":"org/nspl/JavaAWTUtil","k":"def"},
{"l":"org/nspl/JavaAWTUtil.html","n":"pdfToFile","t":"def pdfToFile[K <: Renderable[LazyRef(...)]](f: File, elem: () => K)(implicit er: Renderer[K, JavaRC]): File","d":"org/nspl/JavaAWTUtil","k":"def"},
{"l":"org/nspl/JavaAWTUtil.html","n":"pdfToFile","t":"def pdfToFile[K <: Renderable[LazyRef(...)]](elem: () => K, width: Int)(implicit er: Renderer[K, JavaRC]): File","d":"org/nspl/JavaAWTUtil","k":"def"},
{"l":"org/nspl/JavaAWTUtil.html","n":"pngToByteArray","t":"def pngToByteArray[K <: Renderable[LazyRef(...)]](elem: () => K, width: Int)(implicit er: Renderer[K, JavaRC]): Array[Byte]","d":"org/nspl/JavaAWTUtil","k":"def"},
{"l":"org/nspl/JavaAWTUtil.html","n":"pngToFile","t":"def pngToFile[K <: Renderable[LazyRef(...)]](f: File, elem: () => K, width: Int)(implicit er: Renderer[K, JavaRC]): File","d":"org/nspl/JavaAWTUtil","k":"def"},
{"l":"org/nspl/JavaAWTUtil.html","n":"pngToFile","t":"def pngToFile[K <: Renderable[LazyRef(...)]](f: File, elem: () => K)(implicit er: Renderer[K, JavaRC]): File","d":"org/nspl/JavaAWTUtil","k":"def"},
{"l":"org/nspl/JavaAWTUtil.html","n":"pngToFile","t":"def pngToFile[K <: Renderable[LazyRef(...)]](elem: () => K, width: Int)(implicit er: Renderer[K, JavaRC]): File","d":"org/nspl/JavaAWTUtil","k":"def"},
{"l":"org/nspl/JavaAWTUtil.html","n":"renderToByteArray","t":"def renderToByteArray[K <: Renderable[LazyRef(...)]](elem: () => K, width: Int, mimeType: String)(implicit er: Renderer[K, JavaRC]): Array[Byte]","d":"org/nspl/JavaAWTUtil","k":"def"},
{"l":"org/nspl/JavaAWTUtil.html","n":"renderToFile","t":"def renderToFile[K <: Renderable[LazyRef(...)]](elem: () => K, width: Int, mimeType: String)(implicit er: Renderer[K, JavaRC]): File","d":"org/nspl/JavaAWTUtil","k":"def"},
{"l":"org/nspl/JavaAWTUtil.html","n":"renderToFile","t":"def renderToFile[K <: Renderable[LazyRef(...)]](f: File, elem: () => K, width: Int, mimeType: String)(implicit er: Renderer[K, JavaRC]): File","d":"org/nspl/JavaAWTUtil","k":"def"},
{"l":"org/nspl/JavaAWTUtil.html","n":"show","t":"def show[K <: Renderable[LazyRef(...)]](elem: () => K)(implicit er: Renderer[K, JavaRC]): (JFrame, () => K => Unit)","d":"org/nspl/JavaAWTUtil","k":"def"},
{"l":"org/nspl/JavaAWTUtil.html","n":"svgToByteArray","t":"def svgToByteArray[K <: Renderable[LazyRef(...)]](elem: () => K, width: Int)(implicit er: Renderer[K, JavaRC]): Array[Byte]","d":"org/nspl/JavaAWTUtil","k":"def"},
{"l":"org/nspl/JavaAWTUtil.html","n":"svgToFile","t":"def svgToFile[K <: Renderable[LazyRef(...)]](f: File, elem: () => K, width: Int)(implicit er: Renderer[K, JavaRC]): File","d":"org/nspl/JavaAWTUtil","k":"def"},
{"l":"org/nspl/JavaAWTUtil.html","n":"write","t":"def write[K <: Renderable[LazyRef(...)]](elem: () => K, os: OutputStream, width: Int, mimeType: String)(implicit er: Renderer[K, JavaRC]): Unit","d":"org/nspl/JavaAWTUtil","k":"def"},
{"l":"org/nspl/JavaAWTUtil.html","n":"writeBitmap","t":"def writeBitmap[K <: Renderable[LazyRef(...)]](build: () => K, os: OutputStream, width: Int, mimeType: String)(implicit er: Renderer[K, JavaRC]): Unit","d":"org/nspl/JavaAWTUtil","k":"def"},
{"l":"org/nspl/JavaAWTUtil.html","n":"writeVector","t":"def writeVector[K <: Renderable[LazyRef(...)]](build: () => K, os: OutputStream, width: Int, format: String)(implicit er: Renderer[K, JavaRC]): Unit","d":"org/nspl/JavaAWTUtil","k":"def"},
{"l":"org/nspl/JavaRC.html","n":"JavaRC","t":"class JavaRC extends RenderingContext[JavaRC]","d":"org/nspl/JavaRC","k":"class"},
{"l":"org/nspl/JavaRC.html","n":"LocalTx","t":"type LocalTx = AffineTransform","d":"org/nspl/JavaRC","k":"type"},
{"l":"org/nspl/JavaRC.html","n":"concatTransform","t":"def concatTransform(tx: AffineTransform): Unit","d":"org/nspl/JavaRC","k":"def"},
{"l":"org/nspl/JavaRC.html","n":"localToScala","t":"def localToScala(tx: AffineTransform): AffineTransform","d":"org/nspl/JavaRC","k":"def"},
{"l":"org/nspl/JavaRC.html","n":"setTransform","t":"def setTransform(tx: LocalTx): Unit","d":"org/nspl/JavaRC","k":"def"},
{"l":"org/nspl/JavaRC.html","n":"setTransformInGraphics","t":"def setTransformInGraphics(): Unit","d":"org/nspl/JavaRC","k":"def"},
{"l":"org/nspl/Layout.html","n":"Layout","t":"trait Layout","d":"org/nspl/Layout","k":"trait"},
{"l":"org/nspl/Layout.html","n":"apply","t":"def apply[F : FC](s: Seq[Bounds]): Seq[Bounds]","d":"org/nspl/Layout","k":"def"},
{"l":"org/nspl/LegendConfig.html","n":"LegendConfig","t":"trait LegendConfig","d":"org/nspl/LegendConfig","k":"trait"},
{"l":"org/nspl/Line.html","n":"Line","t":"class Line(x1: Double, y1: Double, x2: Double, y2: Double, tx: AffineTransform) extends Shape","d":"org/nspl/Line","k":"class"},
{"l":"org/nspl/Line.html","n":"bounds","t":"def bounds: Bounds","d":"org/nspl/Line","k":"def"},
{"l":"org/nspl/Line.html","n":"currentTransform","t":"def currentTransform: AffineTransform","d":"org/nspl/Line","k":"def"},
{"l":"org/nspl/Line.html","n":"transform","t":"def transform(tx: (Bounds, AffineTransform) => AffineTransform): Shape","d":"org/nspl/Line","k":"def"},
{"l":"org/nspl/LinearAxisFactory$.html","n":"LinearAxisFactory","t":"object LinearAxisFactory extends AxisFactory","d":"org/nspl/LinearAxisFactory$","k":"object"},
{"l":"org/nspl/LinearAxisFactory$.html","n":"make","t":"def make(min1: Double, max1: Double, width1: Double, horizontal: Boolean): Axis","d":"org/nspl/LinearAxisFactory$","k":"def"},
{"l":"org/nspl/Log10AxisFactory$.html","n":"Log10AxisFactory","t":"object Log10AxisFactory extends AxisFactory","d":"org/nspl/Log10AxisFactory$","k":"object"},
{"l":"org/nspl/Log10AxisFactory$.html","n":"make","t":"def make(min1: Double, max1: Double, width1: Double, horizontal: Boolean): Axis","d":"org/nspl/Log10AxisFactory$","k":"def"},
{"l":"org/nspl/LogHeatMapColors.html","n":"LogHeatMapColors","t":"class LogHeatMapColors(min: Double, max: Double) extends Colormap","d":"org/nspl/LogHeatMapColors","k":"class"},
{"l":"org/nspl/LogHeatMapColors.html","n":"apply","t":"def apply(value: Double): Color","d":"org/nspl/LogHeatMapColors","k":"def"},
{"l":"org/nspl/LogHeatMapColors.html","n":"max1","t":"val max1: Double","d":"org/nspl/LogHeatMapColors","k":"val"},
{"l":"org/nspl/LogHeatMapColors.html","n":"min1","t":"val min1: Double","d":"org/nspl/LogHeatMapColors","k":"val"},
{"l":"org/nspl/LogHeatMapColors.html","n":"withRange","t":"def withRange(min: Double, max: Double): Colormap","d":"org/nspl/LogHeatMapColors","k":"def"},
{"l":"org/nspl/NotInLegend$.html","n":"NotInLegend","t":"object NotInLegend extends LegendConfig","d":"org/nspl/NotInLegend$","k":"object"},
{"l":"org/nspl/Parameters.html","n":"Parameters","t":"class Parameters(val xlog: Boolean, val ylog: Boolean, val main: String, val xlab: String, val ylab: String, val xnames: Seq[(Double, String)], val ynames: Seq[(Double, String)], val xlim: Option[(Double, Double)], val ylim: Option[(Double, Double)], val draw1Line: Boolean, val extraLegend: Seq[(String, LegendElem)], val xLabFontSize: RelFontSize, val yLabFontSize: RelFontSize, val mainFontSize: RelFontSize, val xNumTicks: Int, val yNumTicks: Int, val xAxisMargin: Double, val yAxisMargin: Double, val legendFontSize: RelFontSize, val legendWidth: RelFontSize, val xgrid: Boolean, val ygrid: Boolean, val xWidth: RelFontSize, val yHeight: RelFontSize, val frame: Boolean, val xLabelRotation: Double, val yLabelRotation: Double, val origin: Option[(Double, Double)], val xCustomGrid: Boolean, val yCustomGrid: Boolean, val legendLayout: Layout, val legendDistance: RelFontSize, val xTickLength: RelFontSize, val yTickLength: RelFontSize, val xLineWidthFraction: Double, val yLineWidthFraction: Double, val xLineStartFraction: Double, val yLineStartFraction: Double, val topPadding: RelFontSize, val bottomPadding: RelFontSize, val leftPadding: RelFontSize, val rightPadding: RelFontSize, val xLabDistance: RelFontSize, val yLabDistance: RelFontSize, val mainLabDistance: RelFontSize, val xTickSpace: Option[Double], val yTickSpace: Option[Double], val noLegend: Boolean, val xNoTickLabel: Boolean, val yNoTickLabel: Boolean)","d":"org/nspl/Parameters","k":"class"},
{"l":"org/nspl/Parameters.html","n":"bottomPadding","t":"val bottomPadding: RelFontSize","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"copy","t":"def copy(yNoTickLabel: Boolean, xNoTickLabel: Boolean, noLegend: Boolean, yTickSpace: Option[Double], xTickSpace: Option[Double], mainLabDistance: RelFontSize, yLabDistance: RelFontSize, xLabDistance: RelFontSize, rightPadding: RelFontSize, leftPadding: RelFontSize, bottomPadding: RelFontSize, topPadding: RelFontSize, yLineStartFraction: Double, xLineStartFraction: Double, yLineWidthFraction: Double, xLineWidthFraction: Double, yTickLength: RelFontSize, xTickLength: RelFontSize, legendDistance: RelFontSize, legendLayout: Layout, yCustomGrid: Boolean, xCustomGrid: Boolean, origin: Option[(Double, Double)], yLabelRotation: Double, xLabelRotation: Double, frame: Boolean, yHeight: RelFontSize, xWidth: RelFontSize, ygrid: Boolean, xgrid: Boolean, legendWidth: RelFontSize, legendFontSize: RelFontSize, yAxisMargin: Double, xAxisMargin: Double, yNumTicks: Int, xNumTicks: Int, mainFontSize: RelFontSize, yLabFontSize: RelFontSize, xLabFontSize: RelFontSize, extraLegend: Seq[(String, LegendElem)], draw1Line: Boolean, ylim: Option[(Double, Double)], xlim: Option[(Double, Double)], ynames: Seq[(Double, String)], xnames: Seq[(Double, String)], ylab: String, xlab: String, main: String, ylog: Boolean, xlog: Boolean): Parameters","d":"org/nspl/Parameters","k":"def"},
{"l":"org/nspl/Parameters.html","n":"draw1Line","t":"val draw1Line: Boolean","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"extraLegend","t":"val extraLegend: Seq[(String, LegendElem)]","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"frame","t":"val frame: Boolean","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"leftPadding","t":"val leftPadding: RelFontSize","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"legendDistance","t":"val legendDistance: RelFontSize","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"legendFontSize","t":"val legendFontSize: RelFontSize","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"legendLayout","t":"val legendLayout: Layout","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"legendWidth","t":"val legendWidth: RelFontSize","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"main","t":"val main: String","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"mainFontSize","t":"val mainFontSize: RelFontSize","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"mainLabDistance","t":"val mainLabDistance: RelFontSize","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"noLegend","t":"val noLegend: Boolean","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"origin","t":"val origin: Option[(Double, Double)]","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"rightPadding","t":"val rightPadding: RelFontSize","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"topPadding","t":"val topPadding: RelFontSize","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"xAxisMargin","t":"val xAxisMargin: Double","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"xCustomGrid","t":"val xCustomGrid: Boolean","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"xLabDistance","t":"val xLabDistance: RelFontSize","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"xLabFontSize","t":"val xLabFontSize: RelFontSize","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"xLabelRotation","t":"val xLabelRotation: Double","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"xLineStartFraction","t":"val xLineStartFraction: Double","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"xLineWidthFraction","t":"val xLineWidthFraction: Double","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"xNoTickLabel","t":"val xNoTickLabel: Boolean","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"xNumTicks","t":"val xNumTicks: Int","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"xTickLength","t":"val xTickLength: RelFontSize","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"xTickSpace","t":"val xTickSpace: Option[Double]","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"xWidth","t":"val xWidth: RelFontSize","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"xgrid","t":"val xgrid: Boolean","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"xlab","t":"val xlab: String","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"xlim","t":"val xlim: Option[(Double, Double)]","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"xlog","t":"val xlog: Boolean","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"xnames","t":"val xnames: Seq[(Double, String)]","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"yAxisMargin","t":"val yAxisMargin: Double","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"yCustomGrid","t":"val yCustomGrid: Boolean","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"yHeight","t":"val yHeight: RelFontSize","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"yLabDistance","t":"val yLabDistance: RelFontSize","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"yLabFontSize","t":"val yLabFontSize: RelFontSize","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"yLabelRotation","t":"val yLabelRotation: Double","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"yLineStartFraction","t":"val yLineStartFraction: Double","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"yLineWidthFraction","t":"val yLineWidthFraction: Double","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"yNoTickLabel","t":"val yNoTickLabel: Boolean","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"yNumTicks","t":"val yNumTicks: Int","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"yTickLength","t":"val yTickLength: RelFontSize","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"yTickSpace","t":"val yTickSpace: Option[Double]","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"ygrid","t":"val ygrid: Boolean","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"ylab","t":"val ylab: String","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"ylim","t":"val ylim: Option[(Double, Double)]","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"ylog","t":"val ylog: Boolean","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Parameters.html","n":"ynames","t":"val ynames: Seq[(Double, String)]","d":"org/nspl/Parameters","k":"val"},
{"l":"org/nspl/Path.html","n":"Path","t":"class Path(path: Seq[PathOperation], currentTransform: AffineTransform) extends Shape","d":"org/nspl/Path","k":"class"},
{"l":"org/nspl/Path.html","n":"bounds","t":"val bounds: Bounds","d":"org/nspl/Path","k":"val"},
{"l":"org/nspl/Path.html","n":"transform","t":"def transform(tx: (Bounds, AffineTransform) => AffineTransform): Shape","d":"org/nspl/Path","k":"def"},
{"l":"org/nspl/Path.html","n":"transform","t":"def transform(tx: AffineTransform): Path","d":"org/nspl/Path","k":"def"},
{"l":"org/nspl/PathOperation.html","n":"PathOperation","t":"trait PathOperation","d":"org/nspl/PathOperation","k":"trait"},
{"l":"org/nspl/PathOperation$.html","n":"PathOperation","t":"object PathOperation","d":"org/nspl/PathOperation$","k":"object"},
{"l":"org/nspl/PathOperation$$CubicTo.html","n":"CubicTo","t":"class CubicTo(p3: Point, p1: Point, p2: Point) extends PathOperation","d":"org/nspl/PathOperation$$CubicTo","k":"class"},
{"l":"org/nspl/PathOperation$$LineTo.html","n":"LineTo","t":"class LineTo(p: Point) extends PathOperation","d":"org/nspl/PathOperation$$LineTo","k":"class"},
{"l":"org/nspl/PathOperation$$MoveTo.html","n":"MoveTo","t":"class MoveTo(p: Point) extends PathOperation","d":"org/nspl/PathOperation$$MoveTo","k":"class"},
{"l":"org/nspl/PathOperation$$QuadTo.html","n":"QuadTo","t":"class QuadTo(p2: Point, p1: Point) extends PathOperation","d":"org/nspl/PathOperation$$QuadTo","k":"class"},
{"l":"org/nspl/PlotAreaIdentifier.html","n":"PlotAreaIdentifier","t":"class PlotAreaIdentifier(id: PlotId, bounds: Option[Bounds]) extends Identifier","d":"org/nspl/PlotAreaIdentifier","k":"class"},
{"l":"org/nspl/PlotId.html","n":"PlotId","t":"class PlotId","d":"org/nspl/PlotId","k":"class"},
{"l":"org/nspl/Point.html","n":"Point","t":"class Point(x: Double, y: Double)","d":"org/nspl/Point","k":"class"},
{"l":"org/nspl/Point.html","n":"distance","t":"def distance(p: Point): Double","d":"org/nspl/Point","k":"def"},
{"l":"org/nspl/Point.html","n":"transform","t":"def transform(tx: AffineTransform): Point","d":"org/nspl/Point","k":"def"},
{"l":"org/nspl/Point.html","n":"transform","t":"def transform(tx: Bounds => AffineTransform): Point","d":"org/nspl/Point","k":"def"},
{"l":"org/nspl/Point.html","n":"translate","t":"def translate(dx: Double, dy: Double): Point","d":"org/nspl/Point","k":"def"},
{"l":"org/nspl/Rectangle.html","n":"Rectangle","t":"class Rectangle(x: Double, y: Double, w: Double, h: Double, tx: AffineTransform, anchor: Option[Point]) extends Shape","d":"org/nspl/Rectangle","k":"class"},
{"l":"org/nspl/Rectangle.html","n":"bounds","t":"def bounds: Bounds","d":"org/nspl/Rectangle","k":"def"},
{"l":"org/nspl/Rectangle.html","n":"currentTransform","t":"def currentTransform: AffineTransform","d":"org/nspl/Rectangle","k":"def"},
{"l":"org/nspl/Rectangle.html","n":"transform","t":"def transform(tx: (Bounds, AffineTransform) => AffineTransform): Shape","d":"org/nspl/Rectangle","k":"def"},
{"l":"org/nspl/RedBlue.html","n":"RedBlue","t":"class RedBlue(min: Double, max: Double, center: Option[Double], centerBrightness: Int) extends Colormap","d":"org/nspl/RedBlue","k":"class"},
{"l":"org/nspl/RedBlue.html","n":"apply","t":"def apply(value: Double): Color","d":"org/nspl/RedBlue","k":"def"},
{"l":"org/nspl/RedBlue.html","n":"withRange","t":"def withRange(min: Double, max: Double): Colormap","d":"org/nspl/RedBlue","k":"def"},
{"l":"org/nspl/RelFontSize.html","n":"RelFontSize","t":"class RelFontSize(val factor: Double) extends AnyVal","d":"org/nspl/RelFontSize","k":"class"},
{"l":"org/nspl/RelFontSize.html","n":"*","t":"def *(t: Double): RelFontSize","d":"org/nspl/RelFontSize","k":"def"},
{"l":"org/nspl/RelFontSize.html","n":"factor","t":"val factor: Double","d":"org/nspl/RelFontSize","k":"val"},
{"l":"org/nspl/RelFontSize.html","n":"value","t":"def value(implicit fc: FontConfiguration): Double","d":"org/nspl/RelFontSize","k":"def"},
{"l":"org/nspl/RelativeToFirst.html","n":"RelativeToFirst","t":"class RelativeToFirst(x: Double, y: Double) extends Layout","d":"org/nspl/RelativeToFirst","k":"class"},
{"l":"org/nspl/RelativeToFirst.html","n":"apply","t":"def apply[F : FC](s: Seq[Bounds]): Seq[Bounds]","d":"org/nspl/RelativeToFirst","k":"def"},
{"l":"org/nspl/Renderable.html","n":"Renderable","t":"trait Renderable[K]","d":"org/nspl/Renderable","k":"trait"},
{"l":"org/nspl/Renderable.html","n":"bounds","t":"def bounds: Bounds","d":"org/nspl/Renderable","k":"def"},
{"l":"org/nspl/Renderable.html","n":"rotate","t":"def rotate(rad: Double, x: Double, y: Double): K","d":"org/nspl/Renderable","k":"def"},
{"l":"org/nspl/Renderable.html","n":"rotate","t":"def rotate(rad: Double): K","d":"org/nspl/Renderable","k":"def"},
{"l":"org/nspl/Renderable.html","n":"rotateCenter","t":"def rotateCenter(rad: Double): K","d":"org/nspl/Renderable","k":"def"},
{"l":"org/nspl/Renderable.html","n":"scale","t":"def scale(x: Double, y: Double): K","d":"org/nspl/Renderable","k":"def"},
{"l":"org/nspl/Renderable.html","n":"transform","t":"def transform(v: (Bounds, AffineTransform) => AffineTransform): K","d":"org/nspl/Renderable","k":"def"},
{"l":"org/nspl/Renderable.html","n":"transform","t":"def transform(v: AffineTransform): K","d":"org/nspl/Renderable","k":"def"},
{"l":"org/nspl/Renderable.html","n":"translate","t":"def translate(x: Double, y: Double): K","d":"org/nspl/Renderable","k":"def"},
{"l":"org/nspl/Renderer.html","n":"Renderer","t":"trait Renderer[E, R <: RenderingContext[R]]","d":"org/nspl/Renderer","k":"trait"},
{"l":"org/nspl/Renderer.html","n":"render","t":"def render(r: R, e: E): Unit","d":"org/nspl/Renderer","k":"def"},
{"l":"org/nspl/RenderingContext.html","n":"RenderingContext","t":"trait RenderingContext[A <: RenderingContext[A]]","d":"org/nspl/RenderingContext","k":"trait"},
{"l":"org/nspl/RenderingContext.html","n":"LocalTx","t":"type LocalTx","d":"org/nspl/RenderingContext","k":"type"},
{"l":"org/nspl/RenderingContext.html","n":"concatTransform","t":"def concatTransform(tx: AffineTransform): Unit","d":"org/nspl/RenderingContext","k":"def"},
{"l":"org/nspl/RenderingContext.html","n":"getAffineTransform","t":"def getAffineTransform: AffineTransform","d":"org/nspl/RenderingContext","k":"def"},
{"l":"org/nspl/RenderingContext.html","n":"getTransform","t":"def getTransform: LocalTx","d":"org/nspl/RenderingContext","k":"def"},
{"l":"org/nspl/RenderingContext.html","n":"localToScala","t":"def localToScala(tx: LocalTx): AffineTransform","d":"org/nspl/RenderingContext","k":"def"},
{"l":"org/nspl/RenderingContext.html","n":"render","t":"def render[K <: Renderable[LazyRef(...)]](k: K)(implicit r: Renderer[K, A]): Unit","d":"org/nspl/RenderingContext","k":"def"},
{"l":"org/nspl/RenderingContext.html","n":"setTransform","t":"def setTransform(tx: LocalTx): Unit","d":"org/nspl/RenderingContext","k":"def"},
{"l":"org/nspl/RenderingContext.html","n":"withTransform","t":"def withTransform[T](tx: AffineTransform)(f: => T): T","d":"org/nspl/RenderingContext","k":"def"},
{"l":"org/nspl/ScalaTagRC.html","n":"ScalaTagRC","t":"class ScalaTagRC extends RenderingContext[ScalaTagRC]","d":"org/nspl/ScalaTagRC","k":"class"},
{"l":"org/nspl/ScalaTagRC.html","n":"LocalTx","t":"type LocalTx = AffineTransform","d":"org/nspl/ScalaTagRC","k":"type"},
{"l":"org/nspl/ScalaTagRC.html","n":"concatTransform","t":"def concatTransform(tx: AffineTransform): Unit","d":"org/nspl/ScalaTagRC","k":"def"},
{"l":"org/nspl/ScalaTagRC.html","n":"getTransform","t":"def getTransform: AffineTransform","d":"org/nspl/ScalaTagRC","k":"def"},
{"l":"org/nspl/ScalaTagRC.html","n":"localToScala","t":"def localToScala(tx: AffineTransform): AffineTransform","d":"org/nspl/ScalaTagRC","k":"def"},
{"l":"org/nspl/ScalaTagRC.html","n":"setTransform","t":"def setTransform(tx: LocalTx): Unit","d":"org/nspl/ScalaTagRC","k":"def"},
{"l":"org/nspl/Shape.html","n":"Shape","t":"trait Shape","d":"org/nspl/Shape","k":"trait"},
{"l":"org/nspl/Shape.html","n":"bounds","t":"def bounds: Bounds","d":"org/nspl/Shape","k":"def"},
{"l":"org/nspl/Shape.html","n":"currentTransform","t":"def currentTransform: AffineTransform","d":"org/nspl/Shape","k":"def"},
{"l":"org/nspl/Shape.html","n":"transform","t":"def transform(tx: (Bounds, AffineTransform) => AffineTransform): Shape","d":"org/nspl/Shape","k":"def"},
{"l":"org/nspl/Shape$.html","n":"Shape","t":"object Shape","d":"org/nspl/Shape$","k":"object"},
{"l":"org/nspl/Shape$.html","n":"circle","t":"def circle(r: Double): Ellipse","d":"org/nspl/Shape$","k":"def"},
{"l":"org/nspl/Shape$.html","n":"ellipse","t":"def ellipse(x: Double, y: Double, w: Double, h: Double): Ellipse","d":"org/nspl/Shape$","k":"def"},
{"l":"org/nspl/Shape$.html","n":"hexagon","t":"def hexagon(size: Double): SimplePath","d":"org/nspl/Shape$","k":"def"},
{"l":"org/nspl/Shape$.html","n":"line","t":"def line(p1: Point, p2: Point): Line","d":"org/nspl/Shape$","k":"def"},
{"l":"org/nspl/Shape$.html","n":"rectangle","t":"def rectangle(x: Double, y: Double, w: Double, h: Double, anchor: Option[Point]): Rectangle","d":"org/nspl/Shape$","k":"def"},
{"l":"org/nspl/Shape$.html","n":"square","t":"def square(r: Double): Rectangle","d":"org/nspl/Shape$","k":"def"},
{"l":"org/nspl/ShapeElem.html","n":"ShapeElem","t":"class ShapeElem(shape: Shape, fill: Color, strokeColor: Color, stroke: Option[Stroke], identifier: Identifier, tx: AffineTransform) extends Renderable[ShapeElem]","d":"org/nspl/ShapeElem","k":"class"},
{"l":"org/nspl/ShapeElem.html","n":"bounds","t":"val bounds: Bounds","d":"org/nspl/ShapeElem","k":"val"},
{"l":"org/nspl/ShapeElem.html","n":"transform","t":"def transform(tx: (Bounds, AffineTransform) => AffineTransform): ShapeElem","d":"org/nspl/ShapeElem","k":"def"},
{"l":"org/nspl/ShapeElem.html","n":"transform","t":"def transform(tx: AffineTransform): ShapeElem","d":"org/nspl/ShapeElem","k":"def"},
{"l":"org/nspl/ShapeElem.html","n":"withIdentifier","t":"def withIdentifier(id: Identifier): ShapeElem","d":"org/nspl/ShapeElem","k":"def"},
{"l":"org/nspl/SimplePath.html","n":"SimplePath","t":"class SimplePath(ps: Seq[Point], currentTransform: AffineTransform) extends Shape","d":"org/nspl/SimplePath","k":"class"},
{"l":"org/nspl/SimplePath.html","n":"bounds","t":"def bounds: Bounds","d":"org/nspl/SimplePath","k":"def"},
{"l":"org/nspl/SimplePath.html","n":"transform","t":"def transform(tx: (Bounds, AffineTransform) => AffineTransform): Shape","d":"org/nspl/SimplePath","k":"def"},
{"l":"org/nspl/Stroke.html","n":"Stroke","t":"class Stroke(width: Double, cap: Cap, dash: Seq[Double])","d":"org/nspl/Stroke","k":"class"},
{"l":"org/nspl/StrokeConf.html","n":"StrokeConf","t":"class StrokeConf(width: RelFontSize, cap: Cap, dash: Seq[RelFontSize])","d":"org/nspl/StrokeConf","k":"class"},
{"l":"org/nspl/StrokeConf.html","n":"value","t":"def value(implicit fc: FontConfiguration): Stroke","d":"org/nspl/StrokeConf","k":"def"},
{"l":"org/nspl/TableColormap.html","n":"TableColormap","t":"class TableColormap(map: Map[Double, Color]) extends Colormap","d":"org/nspl/TableColormap","k":"class"},
{"l":"org/nspl/TableColormap.html","n":"apply","t":"def apply(v: Double): Color","d":"org/nspl/TableColormap","k":"def"},
{"l":"org/nspl/TableColormap.html","n":"withRange","t":"def withRange(min: Double, max: Double): Colormap","d":"org/nspl/TableColormap","k":"def"},
{"l":"org/nspl/TableColormap$.html","n":"TableColormap","t":"object TableColormap","d":"org/nspl/TableColormap$","k":"object"},
{"l":"org/nspl/TableColormap$.html","n":"apply","t":"def apply(colors: Color*): TableColormap","d":"org/nspl/TableColormap$","k":"def"},
{"l":"org/nspl/TableLayout.html","n":"TableLayout","t":"class TableLayout(columns: Int, horizontalGap: RelFontSize, verticalGap: RelFontSize) extends Layout","d":"org/nspl/TableLayout","k":"class"},
{"l":"org/nspl/TableLayout.html","n":"apply","t":"def apply[F : FC](s: Seq[Bounds]): Seq[Bounds]","d":"org/nspl/TableLayout","k":"def"},
{"l":"org/nspl/TextBox.html","n":"TextBox","t":"class TextBox(val layout: TextLayout, val color: Color, val tx: AffineTransform)(implicit fc: FontConfiguration) extends Renderable[TextBox]","d":"org/nspl/TextBox","k":"class"},
{"l":"org/nspl/TextBox.html","n":"bounds","t":"val bounds: Bounds","d":"org/nspl/TextBox","k":"val"},
{"l":"org/nspl/TextBox.html","n":"color","t":"val color: Color","d":"org/nspl/TextBox","k":"val"},
{"l":"org/nspl/TextBox.html","n":"font","t":"val font: Font","d":"org/nspl/TextBox","k":"val"},
{"l":"org/nspl/TextBox.html","n":"layout","t":"val layout: TextLayout","d":"org/nspl/TextBox","k":"val"},
{"l":"org/nspl/TextBox.html","n":"transform","t":"def transform(tx: (Bounds, AffineTransform) => AffineTransform): TextBox","d":"org/nspl/TextBox","k":"def"},
{"l":"org/nspl/TextBox.html","n":"transform","t":"def transform(tx: AffineTransform): TextBox","d":"org/nspl/TextBox","k":"def"},
{"l":"org/nspl/TextBox.html","n":"tx","t":"val tx: AffineTransform","d":"org/nspl/TextBox","k":"val"},
{"l":"org/nspl/TextBox$.html","n":"TextBox","t":"object TextBox","d":"org/nspl/TextBox$","k":"object"},
{"l":"org/nspl/TextBox$.html","n":"apply","t":"def apply(text: String, width: Option[Double], fontSize: RelFontSize, color: Color, tx: AffineTransform)(implicit fc: FontConfiguration): TextBox","d":"org/nspl/TextBox$","k":"def"},
{"l":"org/nspl/TextLayout.html","n":"TextLayout","t":"class TextLayout(lines: Seq[(String, AffineTransform)], bounds: Bounds)","d":"org/nspl/TextLayout","k":"class"},
{"l":"org/nspl/TextLayout.html","n":"isEmpty","t":"def isEmpty: Boolean","d":"org/nspl/TextLayout","k":"def"},
{"l":"org/nspl/TextLayout$.html","n":"TextLayout","t":"object TextLayout","d":"org/nspl/TextLayout$","k":"object"},
{"l":"org/nspl/TextLayout$.html","n":"apply","t":"def apply(maxWidth: Option[Double], text: String, fontSize: RelFontSize)(implicit fc: FontConfiguration): TextLayout","d":"org/nspl/TextLayout$","k":"def"},
{"l":"org/nspl/VerticalStack.html","n":"VerticalStack","t":"class VerticalStack(alignment: Alignment, gap: RelFontSize) extends Layout","d":"org/nspl/VerticalStack","k":"class"},
{"l":"org/nspl/VerticalStack.html","n":"apply","t":"def apply[F : FC](s: Seq[Bounds]): Seq[Bounds]","d":"org/nspl/VerticalStack","k":"def"},
{"l":"org/nspl/awtrenderer$.html","n":"awtrenderer","t":"object awtrenderer extends JavaAWTUtil","d":"org/nspl/awtrenderer$","k":"object"},
{"l":"org/nspl/awtrenderer$.html","n":"defaultAWTFont","t":"val defaultAWTFont: FontConfiguration","d":"org/nspl/awtrenderer$","k":"val"},
{"l":"org/nspl/awtrenderer$.html","n":"defaultGlyphMeasurer","t":"val defaultGlyphMeasurer: GlyphMeasurer","d":"org/nspl/awtrenderer$","k":"val"},
{"l":"org/nspl/awtrenderer$.html","n":"shapeRenderer","t":"val shapeRenderer: Renderer[ShapeElem, JavaRC]","d":"org/nspl/awtrenderer$","k":"val"},
{"l":"org/nspl/awtrenderer$.html","n":"textRenderer","t":"val textRenderer: Renderer[TextBox, JavaRC]","d":"org/nspl/awtrenderer$","k":"val"},
{"l":"org/nspl/canvasFont$.html","n":"canvasFont","t":"object canvasFont","d":"org/nspl/canvasFont$","k":"object"},
{"l":"org/nspl/canvasFont$.html","n":"apply","t":"def apply(f: Font): String","d":"org/nspl/canvasFont$","k":"def"},
{"l":"org/nspl/canvasrenderer$.html","n":"canvasrenderer","t":"object canvasrenderer","d":"org/nspl/canvasrenderer$","k":"object"},
{"l":"org/nspl/canvasrenderer$.html","n":"defaultFont","t":"val defaultFont: FontConfiguration","d":"org/nspl/canvasrenderer$","k":"val"},
{"l":"org/nspl/canvasrenderer$.html","n":"defaultGlyphMeasurer","t":"val defaultGlyphMeasurer: GlyphMeasurer","d":"org/nspl/canvasrenderer$","k":"val"},
{"l":"org/nspl/canvasrenderer$.html","n":"render","t":"def render[K <: Renderable[LazyRef(...)]](build0: () => K, width: Int, height: Int, click: Identifier => Unit)(implicit er: Renderer[K, CanvasRC]): (Canvas, () => K => Unit)","d":"org/nspl/canvasrenderer$","k":"def"},
{"l":"org/nspl/canvasrenderer$.html","n":"shapeRenderer","t":"val shapeRenderer: Renderer[ShapeElem, CanvasRC]","d":"org/nspl/canvasrenderer$","k":"val"},
{"l":"org/nspl/canvasrenderer$.html","n":"textRenderer","t":"val textRenderer: Renderer[TextBox, CanvasRC]","d":"org/nspl/canvasrenderer$","k":"val"},
{"l":"org/nspl/defaultBuild.html","n":"defaultBuild","t":"class defaultBuild[T](b: () => T)","d":"org/nspl/defaultBuild","k":"class"},
{"l":"org/nspl/defaultBuild.html","n":"build","t":"def build: T","d":"org/nspl/defaultBuild","k":"def"},
{"l":"org/nspl/ftsSyntaxDouble.html","n":"ftsSyntaxDouble","t":"class ftsSyntaxDouble(v: Double)","d":"org/nspl/ftsSyntaxDouble","k":"class"},
{"l":"org/nspl/ftsSyntaxDouble.html","n":"fts","t":"def fts: RelFontSize","d":"org/nspl/ftsSyntaxDouble","k":"def"},
{"l":"org/nspl/ftsSyntaxInt.html","n":"ftsSyntaxInt","t":"class ftsSyntaxInt(v: Int)","d":"org/nspl/ftsSyntaxInt","k":"class"},
{"l":"org/nspl/ftsSyntaxInt.html","n":"fts","t":"def fts: RelFontSize","d":"org/nspl/ftsSyntaxInt","k":"def"},
{"l":"org/nspl/par$.html","n":"par","t":"object par","d":"org/nspl/par$","k":"object"},
{"l":"org/nspl/par$.html","n":"apply","t":"def apply(noLegend: Boolean, yTickSpace: Option[Double], xTickSpace: Option[Double], mainLabDistance: RelFontSize, yLabDistance: RelFontSize, xLabDistance: RelFontSize, rightPadding: RelFontSize, leftPadding: RelFontSize, bottomPadding: RelFontSize, topPadding: RelFontSize, yLineStartFraction: Double, xLineStartFraction: Double, yLineWidthFraction: Double, xLineWidthFraction: Double, yTickLength: RelFontSize, xTickLength: RelFontSize, legendDistance: RelFontSize, legendLayout: Layout, yCustomGrid: Boolean, xCustomGrid: Boolean, origin: Option[(Double, Double)], yLabelRotation: Double, xLabelRotation: Double, frame: Boolean, yHeight: RelFontSize, xWidth: RelFontSize, ygrid: Boolean, xgrid: Boolean, legendWidth: RelFontSize, legendFontSize: RelFontSize, yAxisMargin: Double, xAxisMargin: Double, yNumTicks: Int, xNumTicks: Int, mainFontSize: RelFontSize, yLabFontSize: RelFontSize, xLabFontSize: RelFontSize, extraLegend: Seq[(String, LegendElem)], draw1Line: Boolean, ylim: Option[(Double, Double)], xlim: Option[(Double, Double)], ynames: Seq[(Double, String)], xnames: Seq[(Double, String)], ylab: String, xlab: String, main: String, ylog: Boolean, xlog: Boolean, xNoTickLabel: Boolean, yNoTickLabel: Boolean): Parameters","d":"org/nspl/par$","k":"def"},
{"l":"org/nspl/saddle$.html","n":"saddle","t":"object saddle","d":"org/nspl/saddle$","k":"object"},
{"l":"org/nspl/saddle$.html","n":"asRaster","t":"def asRaster(mat: Mat[Double]): DataMatrix","d":"org/nspl/saddle$","k":"def"},
{"l":"org/nspl/saddle$.html","n":"barplotHorizontal","t":"def barplotHorizontal[F : FC](series: Series[String, Double], xLabFontSize: Option[RelFontSize], color: Colormap)(parameters: Parameters): () => Elems2[XYPlotArea, ElemList[Elems2[ElemList[ShapeElem], TextBox]]]","d":"org/nspl/saddle$","k":"def"},
{"l":"org/nspl/saddle$.html","n":"barplotVertical","t":"def barplotVertical[F : FC](series: Series[String, Double], color: Colormap, yLabFontSize: Option[RelFontSize])(parameters: Parameters): () => Elems2[XYPlotArea, ElemList[Elems2[ElemList[ShapeElem], TextBox]]]","d":"org/nspl/saddle$","k":"def"},
{"l":"org/nspl/saddle$.html","n":"dataSourceFrom1DVec","t":"def dataSourceFrom1DVec(vec: Vec[Double]): DataSourceWithQuantiles","d":"org/nspl/saddle$","k":"def"},
{"l":"org/nspl/saddle$.html","n":"dataSourceFromFrame","t":"def dataSourceFromFrame[RX, CX](frame: Frame[RX, CX, Double]): DataSourceWithQuantiles","d":"org/nspl/saddle$","k":"def"},
{"l":"org/nspl/saddle$.html","n":"dataSourceFromMat","t":"def dataSourceFromMat(mat: Mat[Double]): DataTable","d":"org/nspl/saddle$","k":"def"},
{"l":"org/nspl/saddle$.html","n":"dataSourceFromRowMajorVec","t":"def dataSourceFromRowMajorVec(vec: Vec[Double], numCols: Int): DataTable","d":"org/nspl/saddle$","k":"def"},
{"l":"org/nspl/saddle$.html","n":"dataSourceFromSeries","t":"def dataSourceFromSeries[R](s: Series[R, Double]): DataSourceWithQuantiles","d":"org/nspl/saddle$","k":"def"},
{"l":"org/nspl/saddle$.html","n":"dataSourceFromZippedVecs2","t":"def dataSourceFromZippedVecs2(vec1: (Vec[Double], Vec[Double])): DataSourceWithQuantiles","d":"org/nspl/saddle$","k":"def"},
{"l":"org/nspl/saddle$.html","n":"dataSourceFromZippedVecs3","t":"def dataSourceFromZippedVecs3(vec1: (Vec[Double], Vec[Double], Vec[Double])): DataSourceWithQuantiles","d":"org/nspl/saddle$","k":"def"},
{"l":"org/nspl/saddle$.html","n":"dataSourceFromZippedVecs4","t":"def dataSourceFromZippedVecs4(vec1: (Vec[Double], Vec[Double], Vec[Double], Vec[Double])): DataSourceWithQuantiles","d":"org/nspl/saddle$","k":"def"},
{"l":"org/nspl/saddle$.html","n":"rasterplotFromFrame","t":"def rasterplotFromFrame[RX, CX, F : FC](dataFrame: Frame[RX, CX, Double], colormap: Colormap, valueText: Boolean, valueColor: Color, valueFontSize: RelFontSize, zlim: Option[(Double, Double)], transparentPixels: Option[Double], xLabFontSize: Option[RelFontSize], yLabFontSize: Option[RelFontSize])(parameters: Parameters): () => Elems2[XYPlotArea, ElemEither[ElemList[Elems2[ElemList[ShapeElem], TextBox]], Elems2[Elems2[ElemList[ShapeElem], AxisElem], TextBox]]]","d":"org/nspl/saddle$","k":"def"},
{"l":"org/nspl/scalatagrenderer$.html","n":"scalatagrenderer","t":"object scalatagrenderer","d":"org/nspl/scalatagrenderer$","k":"object"},
{"l":"org/nspl/scalatagrenderer$.html","n":"defaultFont","t":"val defaultFont: FontConfiguration","d":"org/nspl/scalatagrenderer$","k":"val"},
{"l":"org/nspl/scalatagrenderer$.html","n":"defaultGlyphMeasurer","t":"val defaultGlyphMeasurer: AwtGlyphMeasurer.type","d":"org/nspl/scalatagrenderer$","k":"val"},
{"l":"org/nspl/scalatagrenderer$.html","n":"renderToScalaTag","t":"def renderToScalaTag[K <: Renderable[LazyRef(...)]](elem: K, width: Int)(implicit er: Renderer[K, ScalaTagRC]): Self","d":"org/nspl/scalatagrenderer$","k":"def"},
{"l":"org/nspl/scalatagrenderer$.html","n":"shapeRenderer","t":"val shapeRenderer: Renderer[ShapeElem, ScalaTagRC]","d":"org/nspl/scalatagrenderer$","k":"val"},
{"l":"org/nspl/scalatagrenderer$.html","n":"svgToFile","t":"def svgToFile[K <: Renderable[LazyRef(...)]](elem: K, width: Int)(implicit er: Renderer[K, ScalaTagRC]): File","d":"org/nspl/scalatagrenderer$","k":"def"},
{"l":"org/nspl/scalatagrenderer$.html","n":"svgToFile","t":"def svgToFile[K <: Renderable[LazyRef(...)]](f: File, elem: K, width: Int)(implicit er: Renderer[K, ScalaTagRC]): File","d":"org/nspl/scalatagrenderer$","k":"def"},
{"l":"org/nspl/scalatagrenderer$.html","n":"textRenderer","t":"val textRenderer: Renderer[TextBox, ScalaTagRC]","d":"org/nspl/scalatagrenderer$","k":"val"},
{"l":"org/nspl/svgFont$.html","n":"svgFont","t":"object svgFont","d":"org/nspl/svgFont$","k":"object"},
{"l":"org/nspl/svgFont$.html","n":"apply","t":"def apply(f: Font): String","d":"org/nspl/svgFont$","k":"def"},
{"l":"org/nspl/data.html","n":"org.nspl.data","t":"package org.nspl.data","d":"org/nspl/data","k":"package"},
{"l":"org/nspl/data/DataMatrix.html","n":"DataMatrix","t":"class DataMatrix(rows: Array[Double], numCols: Int, numRows: Int) extends DataSource","d":"org/nspl/data/DataMatrix","k":"class"},
{"l":"org/nspl/data/DataMatrix.html","n":"columnMinMax","t":"def columnMinMax(i: Int): Option[MinMax]","d":"org/nspl/data/DataMatrix","k":"def"},
{"l":"org/nspl/data/DataMatrix.html","n":"dimension","t":"val dimension: Int","d":"org/nspl/data/DataMatrix","k":"val"},
{"l":"org/nspl/data/DataMatrix.html","n":"iterator","t":"def iterator: Iterator[Row]","d":"org/nspl/data/DataMatrix","k":"def"},
{"l":"org/nspl/data/DataSource.html","n":"DataSource","t":"trait DataSource","d":"org/nspl/data/DataSource","k":"trait"},
{"l":"org/nspl/data/DataSource.html","n":"columnMinMax","t":"def columnMinMax(i: Int): Option[MinMax]","d":"org/nspl/data/DataSource","k":"def"},
{"l":"org/nspl/data/DataSource.html","n":"columnNames","t":"def columnNames: Seq[String]","d":"org/nspl/data/DataSource","k":"def"},
{"l":"org/nspl/data/DataSource.html","n":"dimension","t":"def dimension: Int","d":"org/nspl/data/DataSource","k":"def"},
{"l":"org/nspl/data/DataSource.html","n":"iterator","t":"def iterator: Iterator[Row]","d":"org/nspl/data/DataSource","k":"def"},
{"l":"org/nspl/data/DataSourceWithQuantiles.html","n":"DataSourceWithQuantiles","t":"trait DataSourceWithQuantiles extends DataSource","d":"org/nspl/data/DataSourceWithQuantiles","k":"trait"},
{"l":"org/nspl/data/DataSourceWithQuantiles.html","n":"quantilesOfColumn","t":"def quantilesOfColumn(i: Int, qs: Vector[Double]): Vector[Double]","d":"org/nspl/data/DataSourceWithQuantiles","k":"def"},
{"l":"org/nspl/data/DataTable.html","n":"DataTable","t":"class DataTable(rows: Array[Double], numCols: Int) extends DataSourceWithQuantiles","d":"org/nspl/data/DataTable","k":"class"},
{"l":"org/nspl/data/DataTable.html","n":"columnMinMax","t":"def columnMinMax(i: Int): Option[MinMax]","d":"org/nspl/data/DataTable","k":"def"},
{"l":"org/nspl/data/DataTable.html","n":"dimension","t":"def dimension: Int","d":"org/nspl/data/DataTable","k":"def"},
{"l":"org/nspl/data/DataTable.html","n":"iterator","t":"def iterator: Iterator[Row]","d":"org/nspl/data/DataTable","k":"def"},
{"l":"org/nspl/data/DataTable.html","n":"numRows","t":"def numRows: Int","d":"org/nspl/data/DataTable","k":"def"},
{"l":"org/nspl/data/DataTable.html","n":"quantilesOfColumn","t":"def quantilesOfColumn(i: Int, qs: Vector[Double]): Vector[Double]","d":"org/nspl/data/DataTable","k":"def"},
{"l":"org/nspl/data/HexBin$.html","n":"HexBin","t":"object HexBin","d":"org/nspl/data/HexBin$","k":"object"},
{"l":"org/nspl/data/HexBin$.html","n":"apply","t":"def apply(data: Iterator[(Double, Double)], xlim: (Double, Double), ylim: (Double, Double), size: Double, log: Boolean): Seq[(Double, Double, Double)]","d":"org/nspl/data/HexBin$","k":"def"},
{"l":"org/nspl/data/HistogramData.html","n":"HistogramData","t":"class HistogramData(bins: Map[(Double, Double, Double), Double], minX: Double, maxX: Double, maxY: Double, n: Int, lastBinUpperBound: Double)","d":"org/nspl/data/HistogramData","k":"class"},
{"l":"org/nspl/data/HistogramData.html","n":"/","t":"def /(that: HistogramData): HistogramData","d":"org/nspl/data/HistogramData","k":"def"},
{"l":"org/nspl/data/HistogramData.html","n":"filterBinsMinValue","t":"def filterBinsMinValue(m: Double): HistogramData","d":"org/nspl/data/HistogramData","k":"def"},
{"l":"org/nspl/data/HistogramData.html","n":"relative","t":"def relative: HistogramData","d":"org/nspl/data/HistogramData","k":"def"},
{"l":"org/nspl/data/HistogramData.html","n":"toScatter","t":"def toScatter: Seq[(Double, Double, Double, Double, Double)]","d":"org/nspl/data/HistogramData","k":"def"},
{"l":"org/nspl/data/HistogramData$.html","n":"HistogramData","t":"object HistogramData","d":"org/nspl/data/HistogramData$","k":"object"},
{"l":"org/nspl/data/HistogramData$.html","n":"apply","t":"def apply(data: Seq[Double], binBoundaries: Seq[(Double, Double)]): HistogramData","d":"org/nspl/data/HistogramData$","k":"def"},
{"l":"org/nspl/data/HistogramData$.html","n":"apply","t":"def apply(data: Seq[Double], step: Double, min: Double, max: Option[Double]): HistogramData","d":"org/nspl/data/HistogramData$","k":"def"},
{"l":"org/nspl/data/HistogramData$.html","n":"apply","t":"def apply(data: Seq[Double], step: Double): HistogramData","d":"org/nspl/data/HistogramData$","k":"def"},
{"l":"org/nspl/data/HistogramData$.html","n":"apply","t":"def apply(data: Seq[Double], breaks: Int): HistogramData","d":"org/nspl/data/HistogramData$","k":"def"},
{"l":"org/nspl/data/HistogramData$.html","n":"bin","t":"def bin(data: Seq[Double], binning: Seq[Double], boundaries: Seq[(Double, Double)]): Seq[(Double, Double, Seq[Double])]","d":"org/nspl/data/HistogramData$","k":"def"},
{"l":"org/nspl/data/HistogramData$.html","n":"fromStratifiedData","t":"def fromStratifiedData(data: Seq[Seq[Double]], step: Double, relativePerBin: Boolean): Seq[HistogramData]","d":"org/nspl/data/HistogramData$","k":"def"},
{"l":"org/nspl/data/HistogramData$.html","n":"getStep","t":"def getStep(data: Seq[Double], breaks: Int): Double","d":"org/nspl/data/HistogramData$","k":"def"},
{"l":"org/nspl/data/HistogramData$.html","n":"makeBoundaries","t":"def makeBoundaries(step: Double, min: Double, max: Double): Seq[(Double, Double)]","d":"org/nspl/data/HistogramData$","k":"def"},
{"l":"org/nspl/data/HistogramData$.html","n":"makeBoundariesFromPercentiles","t":"def makeBoundariesFromPercentiles(data: Seq[Double], qs: Seq[Double]): Seq[(Double, Double)]","d":"org/nspl/data/HistogramData$","k":"def"},
{"l":"org/nspl/data/KDE$.html","n":"KDE","t":"object KDE","d":"org/nspl/data/KDE$","k":"object"},
{"l":"org/nspl/data/KDE$.html","n":"density2d","t":"def density2d(d: IndexedSeq[(Double, Double)], x: (Double, Double), bw: Double): Double","d":"org/nspl/data/KDE$","k":"def"},
{"l":"org/nspl/data/KDE$.html","n":"normPDF","t":"def normPDF(x: Double): Double","d":"org/nspl/data/KDE$","k":"def"},
{"l":"org/nspl/data/KDE$.html","n":"univariate","t":"def univariate(d: Array[Double], center: Double, bandwidth: Double): Double","d":"org/nspl/data/KDE$","k":"def"},
{"l":"org/nspl/data/MinMax.html","n":"MinMax","t":"trait MinMax","d":"org/nspl/data/MinMax","k":"trait"},
{"l":"org/nspl/data/MinMax.html","n":"max","t":"def max: Double","d":"org/nspl/data/MinMax","k":"def"},
{"l":"org/nspl/data/MinMax.html","n":"min","t":"def min: Double","d":"org/nspl/data/MinMax","k":"def"},
{"l":"org/nspl/data/MinMaxImpl.html","n":"MinMaxImpl","t":"class MinMaxImpl(min: Double, max: Double) extends MinMax","d":"org/nspl/data/MinMaxImpl","k":"class"},
{"l":"org/nspl/data/Row.html","n":"Row","t":"trait Row","d":"org/nspl/data/Row","k":"trait"},
{"l":"org/nspl/data/Row.html","n":"allColumns","t":"def allColumns: Seq[Double]","d":"org/nspl/data/Row","k":"def"},
{"l":"org/nspl/data/Row.html","n":"apply","t":"def apply(i: Int): Double","d":"org/nspl/data/Row","k":"def"},
{"l":"org/nspl/data/Row.html","n":"dimension","t":"def dimension: Int","d":"org/nspl/data/Row","k":"def"},
{"l":"org/nspl/data/Row.html","n":"label","t":"def label: String","d":"org/nspl/data/Row","k":"def"},
{"l":"org/nspl/data/VectorRow.html","n":"VectorRow","t":"class VectorRow(values: Vector[Double], label: String) extends Row","d":"org/nspl/data/VectorRow","k":"class"},
{"l":"org/nspl/data/VectorRow.html","n":"allColumns","t":"def allColumns: Seq[Double]","d":"org/nspl/data/VectorRow","k":"def"},
{"l":"org/nspl/data/VectorRow.html","n":"apply","t":"def apply(i: Int): Double","d":"org/nspl/data/VectorRow","k":"def"},
{"l":"org/nspl/data/VectorRow.html","n":"dimension","t":"def dimension: Int","d":"org/nspl/data/VectorRow","k":"def"},
{"l":"org/nspl/data/VectorRow.html","n":"withLabel","t":"def withLabel(s: String): VectorRow","d":"org/nspl/data/VectorRow","k":"def"},
{"l":"org/nspl/data/VectorRow$.html","n":"VectorRow","t":"object VectorRow","d":"org/nspl/data/VectorRow$","k":"object"},
{"l":"org/nspl/data/VectorRow$.html","n":"apply","t":"def apply(values: Double*): VectorRow","d":"org/nspl/data/VectorRow$","k":"def"},
{"l":"org/nspl/data/VectorRow$.html","n":"apply","t":"def apply(label: String, values: Double*): VectorRow","d":"org/nspl/data/VectorRow$","k":"def"},
{"l":"org/nspl/data/contour$.html","n":"contour","t":"object contour","d":"org/nspl/data/contour$","k":"object"},
{"l":"org/nspl/data/contour$.html","n":"apply","t":"def apply(min1: Double, max1: Double, min2: Double, max2: Double, n: Int, levels: Int)(f: (Double, Double) => Double): IndexedSeq[(Double, IndexedSeq[((Double, Double), (Double, Double))])]","d":"org/nspl/data/contour$","k":"def"},
{"l":"docs/index.html","n":"docs","t":"docs","d":"","k":"static"}];